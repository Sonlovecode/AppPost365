const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const dotenv = require('dotenv');
dotenv.config(); // Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env

const app = express();

// Middleware
app.use(cors()); // Cho ph√©p t·∫•t c·∫£ ngu·ªìn truy c·∫≠p
app.use(express.json()); // Parse body JSON

// Import routes
const authRoutes = require('./routes/auth.routes'); // ƒê·∫£m b·∫£o ƒë√£ import ƒë√∫ng
const tableRoutes = require('./routes/table.routes');
const foodItemsRouter = require('./routes/food_items.routes'); 
const ordersRoutes = require('./routes/orders.routes');

// Route mapping
app.use('/api', authRoutes); // S·ª≠ d·ª•ng c√°c route t·ª´ auth.routes.js
app.use('/api/tables', tableRoutes); 
app.use('/api/food-items', foodItemsRouter); 
app.use('/api/orders', ordersRoutes);

// K·∫øt n·ªëi MongoDB
mongoose.connect(process.env.MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => {
  console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
  app.listen(process.env.PORT || 3000, () => {
    console.log(`üöÄ Server ƒëang ch·∫°y t·∫°i http://localhost:${process.env.PORT || 3000}`);
  });
})
.catch(err => {
  console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', err.message);
});
